{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getData() {\n    return this.http.get('assets/files/sample.json' // Update the URL to point to your local file\n    ).pipe(map(response => {\n      console.log('response: ', response);\n      if (response) {\n        return response;\n      } else {\n        // Handle cases where response is not an array\n        return [];\n      }\n    }));\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","DataService","constructor","http","getData","get","pipe","response","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Eyal\\Documents\\dashboardApp\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n// import { DashboardData } from './dashboard-data.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  constructor(private http: HttpClient) {}\n\n  getData(): Observable<any[]> {\n    return this.http\n      .get<any[]>(\n        'assets/files/sample.json' // Update the URL to point to your local file\n      )\n      .pipe(\n        map((response) => {\n          console.log('response: ', response);\n          if (response) {\n            return response;\n          } else {\n            // Handle cases where response is not an array\n            return [];\n          }\n        })\n      );\n  }\n}\n"],"mappings":"AAIA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACD,IAAI,CACbE,GAAG,CACF,0BAA0B,CAAC;KAC5B,CACAC,IAAI,CACHN,GAAG,CAAEO,QAAQ,IAAI;MACfC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;MACnC,IAAIA,QAAQ,EAAE;QACZ,OAAOA,QAAQ;OAChB,MAAM;QACL;QACA,OAAO,EAAE;;IAEb,CAAC,CAAC,CACH;EACL;;AAnBWN,WAAW,C;mBAAXA,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXZ,WAAW,C;SAAXA,WAAW;EAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}