{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\n//this component is for the num of clicks\nexport class ClicksChartComponent {\n  constructor() {\n    this.data = [];\n    this.barChartOptions = {\n      scaleShowVerticalLines: false,\n      responsive: true,\n      scales: {\n        xAxes: [{\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)'\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0.1)'\n          }\n        }]\n      },\n      colors: [{\n        backgroundColor: 'rgba(0, 0, 255, 0.5)'\n      }, {\n        backgroundColor: 'rgba(255, 255, 0, 0.5)'\n      } // Yellow color for conversions\n      ]\n    };\n\n    this.barChartLabels = [];\n    this.barChartLegend = true;\n    this.barChartType = 'bar';\n    this.barChartData = [];\n  }\n  ngOnChanges() {\n    this.barChartLabels = this.data.map(item => item.timestamp);\n    this.barChartData = [{\n      data: this.data.map(item => item.clicks),\n      label: 'Clicks'\n    }];\n  }\n}\nClicksChartComponent.ɵfac = function ClicksChartComponent_Factory(t) {\n  return new (t || ClicksChartComponent)();\n};\nClicksChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClicksChartComponent,\n  selectors: [[\"app-clicks-chart\"]],\n  inputs: {\n    data: \"data\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 4,\n  consts: [[2, \"display\", \"block\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"legend\"]],\n  template: function ClicksChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"canvas\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"datasets\", ctx.barChartData)(\"labels\", ctx.barChartLabels)(\"options\", ctx.barChartOptions)(\"legend\", ctx.barChartLegend);\n    }\n  },\n  dependencies: [i1.BaseChartDirective],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ClicksChartComponent","constructor","data","barChartOptions","scaleShowVerticalLines","responsive","scales","xAxes","gridLines","color","yAxes","colors","backgroundColor","barChartLabels","barChartLegend","barChartType","barChartData","ngOnChanges","map","item","timestamp","clicks","label","selectors","inputs","features","i0","ɵɵNgOnChangesFeature","decls","vars","consts","template","ClicksChartComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Eyal\\Documents\\dashboardApp\\src\\app\\clicks-chart\\clicks-chart.component.ts","C:\\Users\\Eyal\\Documents\\dashboardApp\\src\\app\\clicks-chart\\clicks-chart.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { DashboardData } from '../dashboard-data.model';\n\n//this component is for the num of clicks\n\n@Component({\n  selector: 'app-clicks-chart',\n  templateUrl: './clicks-chart.component.html',\n  styleUrls: ['./clicks-chart.component.css'],\n})\nexport class ClicksChartComponent {\n  @Input() data: DashboardData[] = [];\n\n  barChartOptions: any = {\n    scaleShowVerticalLines: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0.1)',\n          },\n        },\n      ],\n    },\n    colors: [\n      { backgroundColor: 'rgba(0, 0, 255, 0.5)' }, // Blue color for clicks\n      { backgroundColor: 'rgba(255, 255, 0, 0.5)' }, // Yellow color for conversions\n    ],\n  };\n  barChartLabels: string[] = [];\n  barChartLegend = true;\n  barChartType = 'bar';\n  barChartData: any[] = [];\n\n  constructor() {}\n\n  ngOnChanges() {\n    this.barChartLabels = this.data.map((item) => item.timestamp);\n    this.barChartData = [\n      { data: this.data.map((item) => item.clicks), label: 'Clicks' },\n    ];\n  }\n}\n","<div style=\"display: block\">\n  <canvas\n    baseChart\n    [datasets]=\"barChartData\"\n    [labels]=\"barChartLabels\"\n    [options]=\"barChartOptions\"\n    [legend]=\"barChartLegend\"\n  >\n  </canvas>\n</div>\n"],"mappings":";;AAGA;AAOA,OAAM,MAAOA,oBAAoB;EAgC/BC,YAAA;IA/BS,KAAAC,IAAI,GAAoB,EAAE;IAEnC,KAAAC,eAAe,GAAQ;MACrBC,sBAAsB,EAAE,KAAK;MAC7BC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;QACNC,KAAK,EAAE,CACL;UACEC,SAAS,EAAE;YACTC,KAAK,EAAE;;SAEV,CACF;QACDC,KAAK,EAAE,CACL;UACEF,SAAS,EAAE;YACTC,KAAK,EAAE;;SAEV;OAEJ;MACDE,MAAM,EAAE,CACN;QAAEC,eAAe,EAAE;MAAsB,CAAE,EAC3C;QAAEA,eAAe,EAAE;MAAwB,CAAE,CAAE;MAAA;KAElD;;IACD,KAAAC,cAAc,GAAa,EAAE;IAC7B,KAAAC,cAAc,GAAG,IAAI;IACrB,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,YAAY,GAAU,EAAE;EAET;EAEfC,WAAWA,CAAA;IACT,IAAI,CAACJ,cAAc,GAAG,IAAI,CAACX,IAAI,CAACgB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC;IAC7D,IAAI,CAACJ,YAAY,GAAG,CAClB;MAAEd,IAAI,EAAE,IAAI,CAACA,IAAI,CAACgB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,MAAM,CAAC;MAAEC,KAAK,EAAE;IAAQ,CAAE,CAChE;EACH;;AAvCWtB,oBAAoB,C;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB,C;QAApBA,oBAAoB;EAAAuB,SAAA;EAAAC,MAAA;IAAAtB,IAAA;EAAA;EAAAuB,QAAA,GAAAC,EAAA,CAAAC,oBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVjCP,EAAA,CAAAS,cAAA,aAA4B;MAC1BT,EAAA,CAAAU,SAAA,gBAOS;MACXV,EAAA,CAAAW,YAAA,EAAM;;;MANFX,EAAA,CAAAY,SAAA,GAAyB;MAAzBZ,EAAA,CAAAa,UAAA,aAAAL,GAAA,CAAAlB,YAAA,CAAyB,WAAAkB,GAAA,CAAArB,cAAA,aAAAqB,GAAA,CAAA/B,eAAA,YAAA+B,GAAA,CAAApB,cAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}