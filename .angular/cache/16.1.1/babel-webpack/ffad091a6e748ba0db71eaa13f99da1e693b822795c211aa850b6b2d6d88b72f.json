{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"../overallChart/overallChart.component\";\nimport * as i3 from \"../impressions-chart/impressions-chart.component\";\nimport * as i4 from \"../clicks-chart/clicks-chart.component\";\nimport * as i5 from \"../cost-chart/cost-chart.component\";\nexport class DashboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.response = {\n      title: '',\n      data: []\n    };\n    this.data = [];\n  }\n  fetchData() {\n    this.dataService.getData().subscribe(response => {\n      console.log('response', response);\n      this.response = response;\n      this.data = this.response.data;\n      // You can perform further operations with the data here\n    });\n  }\n\n  ngOnInit() {\n    this.fetchData();\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 19,\n  vars: 5,\n  consts: [[1, \"title\"], [1, \"dashboard\"], [1, \"chart\"], [3, \"data\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"h2\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"app-overallChart\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"h2\");\n      i0.ɵɵtext(9, \"impressions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"app-impressions-chart\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 2)(12, \"h2\");\n      i0.ɵɵtext(13, \"clicks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"app-clicks-chart\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 2)(16, \"h2\");\n      i0.ɵɵtext(17, \"Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"app-cost-chart\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.response.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"data\", ctx.data);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"data\", ctx.data);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"data\", ctx.data);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"data\", ctx.data);\n    }\n  },\n  dependencies: [i2.overallChartComponent, i3.impressionsChartComponent, i4.ClicksChartComponent, i5.CostChartComponent],\n  styles: [\".chart[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n.dashboard[_ngcontent-%COMP%] {\\n  display: flex;\\n  text-align: -webkit-center;\\n  flex-wrap: wrap;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtBQUNaO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsMEJBQTBCO0VBQzFCLGVBQWU7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQge1xyXG4gIHdpZHRoOiA1MCU7XHJcbn1cclxuLmRhc2hib2FyZCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB0ZXh0LWFsaWduOiAtd2Via2l0LWNlbnRlcjtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["DashboardComponent","constructor","dataService","response","title","data","fetchData","getData","subscribe","console","log","ngOnInit","i0","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["C:\\Users\\Eyal\\Documents\\dashboardApp\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\Eyal\\Documents\\dashboardApp\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { DashboardData } from '../dashboard-data.model';\n\ninterface ResponseData {\n  title: string;\n  data: DashboardData[];\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  response: ResponseData = { title: '', data: [] };\n  data: DashboardData[] = [];\n\n  constructor(private dataService: DataService) {}\n\n  fetchData(): void {\n    this.dataService.getData().subscribe((response) => {\n      console.log('response', response);\n      this.response = response;\n\n      this.data = this.response.data;\n      // You can perform further operations with the data here\n    });\n  }\n\n  ngOnInit(): void {\n    this.fetchData();\n  }\n}\n","<h2 class=\"title\">dashboard</h2>\n\n<div class=\"dashboard\">\n  <div class=\"chart\">\n    <h2>{{ response.title }}</h2>\n    <app-overallChart [data]=\"data\"></app-overallChart>\n  </div>\n  <div class=\"chart\">\n    <h2>impressions</h2>\n    <app-impressions-chart [data]=\"data\"></app-impressions-chart>\n  </div>\n  <div class=\"chart\">\n    <h2>clicks</h2>\n    <app-clicks-chart [data]=\"data\"></app-clicks-chart>\n  </div>\n  <div class=\"chart\">\n    <h2>Cost</h2>\n    <app-cost-chart [data]=\"data\"></app-cost-chart>\n  </div>\n</div>\n<!-- <table>\n  <thead>\n    <tr>\n      <th>Timestamp</th>\n      <th>Impressions</th>\n      <th>Clicks</th>\n      <th>Cost</th>\n      <th>Conversions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of data\">\n      <td>{{ item.timestamp }}</td>\n      <td>{{ item.impressions }}</td>\n      <td>{{ item.clicks }}</td>\n      <td>{{ item.cost }}</td>\n      <td>{{ item.conversions }}</td>\n    </tr>\n  </tbody>\n</table> -->\n<!-- <div>HELLO WORLD</div> -->\n"],"mappings":";;;;;;AAcA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,QAAQ,GAAiB;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAChD,KAAAA,IAAI,GAAoB,EAAE;EAEqB;EAE/CC,SAASA,CAAA;IACP,IAAI,CAACJ,WAAW,CAACK,OAAO,EAAE,CAACC,SAAS,CAAEL,QAAQ,IAAI;MAChDM,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEP,QAAQ,CAAC;MACjC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAExB,IAAI,CAACE,IAAI,GAAG,IAAI,CAACF,QAAQ,CAACE,IAAI;MAC9B;IACF,CAAC,CAAC;EACJ;;EAEAM,QAAQA,CAAA;IACN,IAAI,CAACL,SAAS,EAAE;EAClB;;AAlBWN,kBAAkB,C;mBAAlBA,kBAAkB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAlBf,kBAAkB,C;QAAlBA,kBAAkB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCd/BV,EAAA,CAAAY,cAAA,YAAkB;MAAAZ,EAAA,CAAAa,MAAA,gBAAS;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAEhCd,EAAA,CAAAY,cAAA,aAAuB;MAEfZ,EAAA,CAAAa,MAAA,GAAoB;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAC7Bd,EAAA,CAAAe,SAAA,0BAAmD;MACrDf,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,aAAmB;MACbZ,EAAA,CAAAa,MAAA,kBAAW;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACpBd,EAAA,CAAAe,SAAA,gCAA6D;MAC/Df,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,cAAmB;MACbZ,EAAA,CAAAa,MAAA,cAAM;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACfd,EAAA,CAAAe,SAAA,2BAAmD;MACrDf,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,cAAmB;MACbZ,EAAA,CAAAa,MAAA,YAAI;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACbd,EAAA,CAAAe,SAAA,yBAA+C;MACjDf,EAAA,CAAAc,YAAA,EAAM;;;MAdAd,EAAA,CAAAgB,SAAA,GAAoB;MAApBhB,EAAA,CAAAiB,iBAAA,CAAAN,GAAA,CAAApB,QAAA,CAAAC,KAAA,CAAoB;MACNQ,EAAA,CAAAgB,SAAA,GAAa;MAAbhB,EAAA,CAAAkB,UAAA,SAAAP,GAAA,CAAAlB,IAAA,CAAa;MAIRO,EAAA,CAAAgB,SAAA,GAAa;MAAbhB,EAAA,CAAAkB,UAAA,SAAAP,GAAA,CAAAlB,IAAA,CAAa;MAIlBO,EAAA,CAAAgB,SAAA,GAAa;MAAbhB,EAAA,CAAAkB,UAAA,SAAAP,GAAA,CAAAlB,IAAA,CAAa;MAIfO,EAAA,CAAAgB,SAAA,GAAa;MAAbhB,EAAA,CAAAkB,UAAA,SAAAP,GAAA,CAAAlB,IAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}