{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../chart/chart.component\";\nfunction DashboardComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.timestamp);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.impressions);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.clicks);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.cost);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.conversions);\n  }\n}\nexport class DashboardComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.response = {\n      title: '',\n      data: []\n    };\n    this.data = [];\n  }\n  fetchData() {\n    this.dataService.getData().subscribe(response => {\n      console.log('response', response);\n      this.response = response;\n      this.data = this.response.data;\n      // You can perform further operations with the data here\n    });\n  }\n\n  ngOnInit() {\n    this.fetchData();\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[3, \"data\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"app-chart\", 0);\n      i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \"Timestamp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Impressions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Clicks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Conversions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, DashboardComponent_tr_17_Template, 11, 5, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.response.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"data\", ctx.data);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ChartComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","timestamp","impressions","clicks","cost","conversions","DashboardComponent","constructor","dataService","response","title","data","fetchData","getData","subscribe","console","log","ngOnInit","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","DashboardComponent_tr_17_Template","ɵɵproperty"],"sources":["C:\\Users\\Eyal\\Documents\\dashboardApp\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\Eyal\\Documents\\dashboardApp\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { DashboardData } from '../dashboard-data.model';\n\ninterface ResponseData {\n  title: string;\n  data: DashboardData[];\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  response: ResponseData = { title: '', data: [] };\n  data: DashboardData[] = [];\n\n  constructor(private dataService: DataService) {}\n\n  fetchData(): void {\n    this.dataService.getData().subscribe((response) => {\n      console.log('response', response);\n      this.response = response;\n\n      this.data = this.response.data;\n      // You can perform further operations with the data here\n    });\n  }\n\n  ngOnInit(): void {\n    this.fetchData();\n  }\n}\n","<h2>{{ response.title }}</h2>\n<app-chart [data]=\"data\"></app-chart>\n\n<table>\n  <thead>\n    <tr>\n      <th>Timestamp</th>\n      <th>Impressions</th>\n      <th>Clicks</th>\n      <th>Cost</th>\n      <th>Conversions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of data\">\n      <td>{{ item.timestamp }}</td>\n      <td>{{ item.impressions }}</td>\n      <td>{{ item.clicks }}</td>\n      <td>{{ item.cost }}</td>\n      <td>{{ item.conversions }}</td>\n    </tr>\n  </tbody>\n</table>\n<!-- <div>HELLO WORLD</div> -->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}