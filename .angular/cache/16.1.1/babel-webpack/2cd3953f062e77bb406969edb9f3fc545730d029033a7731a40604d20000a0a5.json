{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getData() {\n    return this.http.get('assets/files/my-file.json' // Update the URL to point to your local file\n    ).pipe(map(response => {\n      if (Array.isArray(response)) {\n        return response.map(item => ({\n          timestamp: item.timestamp,\n          impressions: item.impressions,\n          clicks: item.clicks,\n          cost: item.cost,\n          conversions: item.conversions\n        }));\n      } else {\n        // Handle cases where response is not an array\n        return [];\n      }\n    }));\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","DataService","constructor","http","getData","get","pipe","response","Array","isArray","item","timestamp","impressions","clicks","cost","conversions","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Eyal\\Documents\\dashboardApp\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DashboardData } from './dashboard-data.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  constructor(private http: HttpClient) {}\n\n  getData(): Observable<DashboardData[]> {\n    return this.http\n      .get<any[]>(\n        'assets/files/my-file.json' // Update the URL to point to your local file\n      )\n      .pipe(\n        map((response) => {\n          if (Array.isArray(response)) {\n            return response.map(\n              (item) =>\n                ({\n                  timestamp: item.timestamp,\n                  impressions: item.impressions,\n                  clicks: item.clicks,\n                  cost: item.cost,\n                  conversions: item.conversions,\n                } as DashboardData)\n            );\n          } else {\n            // Handle cases where response is not an array\n            return [];\n          }\n        })\n      );\n  }\n}\n"],"mappings":"AAIA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACD,IAAI,CACbE,GAAG,CACF,2BAA2B,CAAC;KAC7B,CACAC,IAAI,CACHN,GAAG,CAAEO,QAAQ,IAAI;MACf,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ,CAACP,GAAG,CAChBU,IAAI,KACF;UACCC,SAAS,EAAED,IAAI,CAACC,SAAS;UACzBC,WAAW,EAAEF,IAAI,CAACE,WAAW;UAC7BC,MAAM,EAAEH,IAAI,CAACG,MAAM;UACnBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;UACfC,WAAW,EAAEL,IAAI,CAACK;SACD,EACtB;OACF,MAAM;QACL;QACA,OAAO,EAAE;;IAEb,CAAC,CAAC,CACH;EACL;;AA3BWd,WAAW,C;mBAAXA,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXlB,WAAW,C;SAAXA,WAAW;EAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}