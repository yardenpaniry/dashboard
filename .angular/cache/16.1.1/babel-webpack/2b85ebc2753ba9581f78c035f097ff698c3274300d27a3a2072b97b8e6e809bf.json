{"ast":null,"code":"import { map } from 'rxjs/operators';\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getData() {\n    return this.http.get('assets/files/sample.json' // Update the URL to point to your local file\n    ).pipe(map(response => {\n      console.log('response: ', response);\n      if (response) {\n        return response;\n      } else {\n        // Handle cases where response is not an array\n        return [];\n      }\n    }));\n  }\n}","map":{"version":3,"names":["map","DataService","constructor","http","getData","get","pipe","response","console","log"],"sources":["C:\\Users\\Eyal\\Documents\\dashboardApp\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DashboardData } from './dashboard-data.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\n\ninterface ResponseData {\n  title: string;\n  data: DashboardData[];\n}\n\nexport class DataService {\n  constructor(private http: HttpClient) {}\n\n  getData(): Observable<DashboardData[]> {\n    return this.http\n      .get<any[]>(\n        'assets/files/sample.json' // Update the URL to point to your local file\n      )\n      .pipe(\n        map((response) => {\n          console.log('response: ', response);\n          if (response) {\n          \n            return response;\n          } else {\n            // Handle cases where response is not an array\n            return [];\n          }\n        })\n      );\n  }\n}\n"],"mappings":"AAIA,SAASA,GAAG,QAAQ,gBAAgB;AAWpC,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACD,IAAI,CACbE,GAAG,CACF,0BAA0B,CAAC;KAC5B,CACAC,IAAI,CACHN,GAAG,CAAEO,QAAQ,IAAI;MACfC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;MACnC,IAAIA,QAAQ,EAAE;QAEZ,OAAOA,QAAQ;OAChB,MAAM;QACL;QACA,OAAO,EAAE;;IAEb,CAAC,CAAC,CACH;EACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}